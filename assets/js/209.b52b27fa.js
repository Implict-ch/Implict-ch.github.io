(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{420:function(t,a,s){"use strict";s.r(a);var e=s(14),i=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://codefun2000.com/p/P1834",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线评测链接:P1834"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("这学期的塔子哥的计网老师教学水平真是一言难尽，还要用ensp来做一些繁琐的模拟实验，但是计网实验跟写代码有什么关系呢？来不及为赶不完的DDL哀悼了，有一个实验描述如下：")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("无线通信移动性需要在基站上配置邻区(本端基站的小区LocalCell与周边邻基站的小区NeighborCelI映射)关系，为了能够加速无线算法的计算效率，设计一个邻区关系缓存表，用于快速的通过本小区LocalCell查询到邻小区NeighborCell。但是缓存表有一定的规格限制，因此到达规格并且需要插入新的数据时，需要删除邻区数据，选择删除邻区数据对象的策略为：")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("（1）使用次数最少的；")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("（2）如果（1）返回有多个对象,则选择最久未使用的。")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("请设计并实现一个满足以上要求的数据结构和算法实现。")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("注:假设每个LocalCell至多只有一个NeighborCell。")]),t._v(" "),a("h1",{attrs:{id:"输入描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入描述"}},[t._v("#")]),t._v(" 输入描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(' 1、首行以字符"capacity:"标识设置一个整数容量;')]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(' 2、以"write:"标识开始进行若干组[LocalCell,NeighborCell]邻区数据的输入,每组数据为一行;如果"write:"已经存在的LocalCell数据,更新其对\n应的NeighborCell,并刷新使用时间和次数加1;如果某邻区数据被删除,缓存表不再保留其记录;')]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(' 3、以"read:"标识进行一次读取LocalCell的使用操作,刷新使用时间和次数加1;')]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(' 4、最后以"query:"标识查询输出操作，输入正整数LocalCell，查询NeighborCell；')]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("注:")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("（1）写入和读取都表示对LocalcelI的使用操作;")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("（2）capacity、LocalCellI和NeighborCelI都是正整数，范围在[1,10000];")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("（3）输入的总行数不超过30000行。")]),t._v(" "),a("h1",{attrs:{id:"输出描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出描述"}},[t._v("#")]),t._v(" 输出描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("每个查询输入正整数LocalCell对应NeighborCell，表示在邻区关系缓存表中的记录。")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 1、找到，则返回NeighborCell；\n"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 2、没有找到，则返回-1;")]),t._v(" "),a("h1",{attrs:{id:"样例一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样例一"}},[t._v("#")]),t._v(" 样例一")]),t._v(" "),a("p",[a("strong",[t._v("输入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("capacLy:\n3\nwrite:\n3\n1 2\n4 3\n2 3\nread:\n2\nwrite:\n1\n3 1\nquery:\n1\n")])])]),a("p",[a("strong",[t._v("输出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-1\n")])])]),a("p",[a("strong",[t._v("解释")])]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 1、设定容量capacity为3")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 2、write输入3组数据，")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 3、read读取2使用,刷新该邻区对使用时间和次数;")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 4、再write输入1组数据,因为已经超了容量3,所以把最早输入且未使用的数据”12”剔除;")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 5、最后进行query查询1因为已经被剔除了,所以返回-1;")]),t._v(" "),a("h1",{attrs:{id:"limitation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitation"}},[t._v("#")]),t._v(" Limitation")]),t._v(" "),a("p",[t._v("1s, 1024KiB for each test case.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/split.png",alt:"split"}})]),t._v(" "),a("h2",{attrs:{id:"题目思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目思路"}},[t._v("#")]),t._v(" 题目思路")]),t._v(" "),a("p",[t._v("本题的原题是力扣460题。")]),t._v(" "),a("p",[t._v("本题的目标是实现一个具有LRU（最近最少使用）策略的缓存系统。为此，我们设计了一个名为"),a("code",[t._v("Node")]),t._v("的数据结构，以及结合哈希表和红黑树（通过"),a("code",[t._v("std::set")]),t._v("）的复合数据结构来支持缓存操作。")]),t._v(" "),a("h4",{attrs:{id:"数据结构定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构定义"}},[t._v("#")]),t._v(" 数据结构定义")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Node 结构")]),t._v("：每个"),a("code",[t._v("Node")]),t._v("包含以下字段：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cnt")]),t._v("：表示节点被访问的次数。")]),t._v(" "),a("li",[a("code",[t._v("time")]),t._v("：表示节点最近一次被访问的时间。")]),t._v(" "),a("li",[a("code",[t._v("key")]),t._v("：节点的键，用于标识缓存项。")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v("：节点的值，即缓存项的数据内容。")])]),t._v(" "),a("p",[t._v("这个结构既用于哈希表中的值，也用于红黑树中的元素。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("哈希表")]),t._v("：使用"),a("code",[t._v("std::unordered_map")]),t._v("存储键和指向节点的指针，以实现快速查找。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("平衡二叉树")]),t._v("：使用"),a("code",[t._v("std::set")]),t._v("来维护一个按"),a("code",[t._v("(cnt, time)")]),t._v("排序的节点集合，确保可以快速访问和删除最少使用的缓存项。")])])]),t._v(" "),a("h4",{attrs:{id:"核心操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心操作"}},[t._v("#")]),t._v(" 核心操作")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("读取（Read）操作")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("检查键是否存在于哈希表中。")]),t._v(" "),a("li",[t._v("如果存在，则更新节点的"),a("code",[t._v("cnt")]),t._v("和"),a("code",[t._v("time")]),t._v("，重新插入到红黑树中以保持排序。")]),t._v(" "),a("li",[t._v("返回节点的值。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("写入（Write）操作")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("如果键存在，更新其值及访问的元数据（"),a("code",[t._v("cnt")]),t._v("和"),a("code",[t._v("time")]),t._v("），并更新红黑树。")]),t._v(" "),a("li",[t._v("如果键不存在，创建一个新的节点，加入哈希表和红黑树。")]),t._v(" "),a("li",[t._v("如果缓存已满（即达到预设的最大容量），则先从红黑树中移除最少使用的缓存项，然后移除对应的哈希表条目。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("查询（Query）操作")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("直接通过哈希表检查键是否存在，并返回相应的值或-1（不存在的标志）。")])])])]),t._v(" "),a("p",[t._v("在这个实现中，我们通过组合哈希表和红黑树来维护LRU缓存，这不仅确保了操作的效率，也简化了最少使用元素的管理。这种策略适用于需要频繁读写且对性能要求较高的场景。")]),t._v(" "),a("h2",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),a("p",[a("strong",[t._v("C++")])]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct Node {\n    int cnt, tim, key, value;\n    Node() {}\n    Node(int a, int b, int c, int d):cnt(a), tim(b), key(c), value(d){}\n    bool operator < (const Node& nod) const {\n        return cnt == nod.cnt ? tim < nod.tim : cnt < nod.cnt;\n    }\n};\nint n, tim;\nunordered_map<int, Node> mapp;\nset<Node> S;\nint get(int key) {\n    if (n == 0 || mapp.find(key) == mapp.end()) {\n        return -1;\n    }\n    Node cache = mapp[key];\n    S.erase(cache);\n    cache.cnt += 1;\n    cache.tim = ++tim;\n    S.insert(cache);\n    mapp[key] = cache;\n    return cache.value;\n}\n\nvoid put(int key, int value) {\n    if (n == 0) return;\n    auto it = mapp.find(key);\n    if (it == mapp.end()) {\n        if (mapp.size() == n) {\n            mapp.erase(S.begin()->key);\n            S.erase(S.begin());\n        }\n        Node cache = Node(1, ++tim, key, value);\n        mapp[key] = cache;\n        S.insert(cache);\n    } else {\n        Node cache = it->second;\n        S.erase(cache);\n        cache.cnt += 1;\n        cache.tim = ++tim;\n        cache.value = value;\n        S.insert(cache);\n        it->second = cache;\n    }\n}\n\nint main() {\n    string s;cin >> s;\n    cin >> n;\n    int x;\n    while (cin >> s) {\n        if (s[0] == 'w') {\n            int m;\n            cin >> m;\n            while (m --) {\n                int a, b;\n                cin >> a >> b;\n                put(a, b);\n            }\n        } else if(s[0] == 'r') {\n        \tcin >> x;\n            get(x);\n        } else while (cin >> x) {\n            if (mapp.count(x)) cout << mapp[x].value << endl;\n            else cout << -1 << endl;\n        }\n    }\n}\n")])])]),a("p",[a("strong",[t._v("会员可通过查看《已通过》的提交记录来查看其他语言哦~")])])])}),[],!1,null,null,null);a.default=i.exports}}]);