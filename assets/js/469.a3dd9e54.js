(window.webpackJsonp=window.webpackJsonp||[]).push([[469],{741:function(t,a,s){"use strict";s.r(a);var i=s(14),n=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://codefun2000.com/p/P1122",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线评测链接:P1122"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[t._v("#")]),t._v(" 题目内容")]),t._v(" "),a("p",[t._v("塔子哥有一个长度为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 的数组 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("a")]),a("mi",[t._v("r")]),a("mi",[t._v("r")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("arr")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("a")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")])])])]),t._v(" ，他想玩一个游戏，这个游戏是对数组进行如下三种操作")]),t._v(" "),a("ol",[a("li",[t._v("将下标在L到R之间的元素全部或上G。")]),t._v(" "),a("li",[t._v("将下标在L到R之间的元素全部与上G。")]),t._v(" "),a("li",[t._v("将下标在L到R之间的元素全部设为G。")])]),t._v(" "),a("p",[t._v("现在，塔子哥想要知道在进行 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 次操作以后得到的数组，你能帮帮他吗？")]),t._v(" "),a("h1",{attrs:{id:"输入描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入描述"}},[t._v("#")]),t._v(" 输入描述")]),t._v(" "),a("p",[t._v("第一行有一个正整数 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("n")]),a("mo",[t._v("(")]),a("mn",[t._v("1")]),a("mo",[t._v("⩽")]),a("mi",[t._v("n")]),a("mo",[t._v("⩽")]),a("mn",[t._v("1")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mo",[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n(1\\leqslant n\\leqslant 100000)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mrel amsrm"},[t._v("⩽")]),a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mrel amsrm"},[t._v("⩽")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("，代表数组的长度。")]),t._v(" "),a("p",[t._v("第二行有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 个非负整数，范围在"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mn",[t._v("0")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("0")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[t._v("0")])])])]),t._v("到 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("msup",[a("mn",[t._v("2")]),a("mrow",[a("mn",[t._v("2")]),a("mn",[t._v("0")])],1)],1),a("mo",[t._v("−")]),a("mn",[t._v("1")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^{20}-1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.897438em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathrm"},[t._v("2")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[a("span",{staticClass:"mord scriptstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[t._v("2")]),a("span",{staticClass:"mord mathrm"},[t._v("0")])])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),a("span",{staticClass:"mbin"},[t._v("−")]),a("span",{staticClass:"mord mathrm"},[t._v("1")])])])]),t._v("之间，代表数组中的元素。")]),t._v(" "),a("p",[t._v("第三行有一个正整数 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" （"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mn",[t._v("1")]),a("mo",[t._v("⩽")]),a("mi",[t._v("m")]),a("mo",[t._v("⩽")]),a("mn",[t._v("1")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")]),a("mn",[t._v("0")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1\\leqslant m \\leqslant 100000")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.78111em","vertical-align":"-0.13667em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mrel amsrm"},[t._v("⩽")]),a("span",{staticClass:"mord mathit"},[t._v("m")]),a("span",{staticClass:"mrel amsrm"},[t._v("⩽")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mord mathrm"},[t._v("0")])])])]),t._v("），代表操作次数。")]),t._v(" "),a("p",[t._v("第四行有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 个正整数，代表 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 次操作中的区间左端点L。")]),t._v(" "),a("p",[t._v("第五行有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 个正整数，代表 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 次操作中的区间右通点R。")]),t._v(" "),a("p",[t._v("第六行是一个长度为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 的字符串，'|' 代表操作1，'&' 代表操作2。'=' 代表操作3。")]),t._v(" "),a("p",[t._v("第七行有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 个正整数，代表 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 次操作中的参数G.")]),t._v(" "),a("h1",{attrs:{id:"输出描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出描述"}},[t._v("#")]),t._v(" 输出描述")]),t._v(" "),a("p",[t._v("在一行中输出 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 个数，代表所有操作按顺序完成后最终所得的数据。")]),t._v(" "),a("h1",{attrs:{id:"样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样例"}},[t._v("#")]),t._v(" 样例")]),t._v(" "),a("p",[a("strong",[t._v("输入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("4\n5 4 7 4\n4\n1 2 3 2\n4 3 4 2\n=|&=\n8 3 6 2\n")])])]),a("p",[a("strong",[t._v("输出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("8 2 2 0\n")])])]),a("p",[a("img",{attrs:{src:"/split.png",alt:"split"}})]),t._v(" "),a("h1",{attrs:{id:"思路-二进制拆位-离线处理-妙用set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路-二进制拆位-离线处理-妙用set"}},[t._v("#")]),t._v(" 思路:二进制拆位 + 离线处理 + 妙用set")]),t._v(" "),a("p",[t._v("​\t0.这道题的一眼做法是开20个线段树，然后区间覆盖的板子。但是这里我给出一个稍微有意思的做法："),a("strong",[t._v("这个问题的本质是可离线的序列上的区间覆盖问题")])]),t._v(" "),a("p",[t._v("​\t1.观察到我们是所有操作都做完，最后做一次询问，而不是边操作边询问，所以可以使用"),a("strong",[t._v("离线")]),t._v(" 技巧。")]),t._v(" "),a("blockquote",[a("p",[t._v("离线:说简单点，就是不按他读入的顺序来处理这些操作。我们可以自由的对操作进行排序来处理")])]),t._v(" "),a("p",[t._v("​\t2.又观察到它所给的操作是位运算+覆盖，所以考虑按二进制的每一位去做:把序列的某一个二进制位摘出来排成数组，那么这些操作等价于在01数组上反复做"),a("strong",[t._v("区间覆盖")]),t._v("。然后又可以离线，所以我们不难想到"),a("strong",[t._v("按时间倒着扫描这些操作")]),t._v(" 。")]),t._v(" "),a("p",[t._v("​\t从倒着扫描这个角度来看，我们其实可以发现每个点最终的结果只会被最晚的cover这个点的那次操作给影响。所以可以想到搞一个set把数字1~n塞到set里。然后对于区间"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mo",[t._v("[")]),a("mi",[t._v("l")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mi",[t._v("r")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("[l,r]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("  ， 我们不停的在set里二分找"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("i")]),a("mo",[t._v("∈")]),a("mo",[t._v("[")]),a("mi",[t._v("l")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mi",[t._v("r")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i \\in [l,r]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mrel"},[t._v("∈")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v(" 的点，"),a("strong",[t._v("覆盖，然后删除即可")]),t._v(". 最后，我们将这些二进制位结果合并一下作为十进制整数输出即可。")]),t._v(" "),a("p",[t._v("​\t由于我们涉及到了比较多的二进制操作，可以使用bitset来缩短编码。")]),t._v(" "),a("h1",{attrs:{id:"代码-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码-注释"}},[t._v("#")]),t._v(" 代码 + 注释")]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100005;\nint l[maxn] , r[maxn];\n// bitset学习资料:https://www.cnblogs.com/magisk/p/8809922.html\nbitset<40> a[maxn] , x[maxn] , res[maxn];\nint main (){\n\tint n;\n    //  输入\n\tcin >> n;\n\tfor (int i = 1 ; i <= n ; i++) {\n\t\tint g; cin >> g;\n\t\ta[i] = g;\n\t}\n\tint q;\n\tcin >> q;\n\tfor (int i = 1 ; i <= q ; i++) {\n\t\tint g; cin >> g;\n\t\tl[i] = g;\n\t}\n\tfor (int i = 1 ; i <= q ; i++) {\n\t\tint g; cin >> g;\n\t\tr[i] = g;\n\t}\n\tstring op_str;\n\tcin >> op_str;\n\top_str = '#' + op_str;\n\tfor (int i = 1 ; i <= q ; i++) {\n\t\tint g; cin >> g;\n\t\tx[i] = g;\n\t}\n    // 按位计算\n\tfor (int d = 0 ; d <= 21 ; d++){\n        // 离线处理，并把问题变成序列上的区间覆盖\n\t\t// {l , r , 0/1} 代表将区间[l,r]覆盖成0/1\n\t\tvector<tuple<int , int , int >> op_arr;\n\t\tfor (int i = 1 ; i <= q ; i++){\n\t\t\tchar op = op_str[i];\n\t\t\tint nowx = x[i][d];\n\t\t\tif (op == '='){\n\t\t\t\top_arr.push_back(make_tuple(l[i] , r[i] , nowx));\n\t\t\t}else if (op == '&'){\n\t\t\t\tif (nowx == 0)\n\t\t\t\top_arr.push_back(make_tuple(l[i] , r[i] , 0));\n\t\t\t}else {\n\t\t\t\tif (nowx == 1)\n\t\t\t\t\top_arr.push_back(make_tuple(l[i] , r[i] , 1));\n\t\t\t}\n\t\t}\n        // 建立set,一开始所有点都待处理\n\t\tset<int> rest;\n\t\tfor (int i = 1 ; i <= n ; i++) rest.insert(i);\n        // 倒着扫，因为每个点只会被最晚的覆盖它的操作影响\n\t\treverse(op_arr.begin() , op_arr.end());\n\t\tfor (auto &op : op_arr){\n\t\t\tint l = get<0>(op);\n\t\t\tint r = get<1>(op);\n\t\t\tint v = get<2>(op);\n\t\t\tint cnt = 0;\n            // 不停的找元素属于[l,r] ， 直到没有....\n\t\t\twhile (rest.size()){\n\t\t\t\tauto it = rest.lower_bound(l);\n\t\t\t\tif (it == rest.end() || *it > r) break;\n\t\t\t\ta[*it][d] = v;\n\t\t\t\trest.erase(it);\n\t\t\t}\n\t\t}\n\t}\n    // 输出\n\tfor (int i = 1 ; i <= n ; i++){\n\t\tcout << a[i].to_ulong();\n\t\tif (i == n) cout << endl;\n\t\telse cout << \" \"; \n\t}\n\treturn 0;\n}\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);