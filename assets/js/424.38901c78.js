(window.webpackJsonp=window.webpackJsonp||[]).push([[424],{699:function(t,s,a){"use strict";a.r(s);var i=a(14),n=Object(i.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://codefun2000.com/p/P1086",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线评测链接:P1086"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"题目内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[t._v("#")]),t._v(" 题目内容")]),t._v(" "),s("p",[t._v("塔子哥是一名冒险家，经过了漫长的旅途，他终于到达了传说中的神秘迷宫。在迷宫里，塔子哥发现了一张 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 行 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 列的二维矩阵，矩阵的每个元素都代表着一个位置，同时每个位置还对应着一个花费值。这个花费值代表着从当前位置走到下一个位置需要消耗的时间。塔子哥站在矩阵的左上角，他每一步可以走上、下、左、右四种方向中的一个，花费的时间为这两个相邻元素的差的绝对值。")]),t._v(" "),s("p",[t._v("此时，塔子哥已经花费了很多时间在迷宫中行走，而他又发现了一件奇怪的事情，就是在这个迷宫中存在传送阵。这个传送阵可以让他瞬间从一个位置传送到另一个位置，而且不会消耗任何时间。不过这个传送阵有两个个限制，这个传送阵只能使用一次，并且只能从一个数字到达另一个相同的数字。这就意味着，如果他想要使用这个传送阵，他需要在同一个数字出现两次之后，才能将这个数字作为传送阵的起点或终点。")]),t._v(" "),s("p",[t._v("为了尽快走出这个迷宫，塔子哥想知道，从左上角走到右下角最少需要多少时间。")]),t._v(" "),s("h2",{attrs:{id:"输入描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入描述"}},[t._v("#")]),t._v(" 输入描述")]),t._v(" "),s("p",[t._v("第一行输入两个正整数 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 和 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 。代表矩阵的行和列。")]),t._v(" "),s("p",[t._v("接下来的 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(" 行，每行输入 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("m")])])])]),t._v(" 个正整数 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msub",[s("mi",[t._v("a")]),s("mrow",[s("mi",[t._v("i")]),s("mi",[t._v("j")])],1)],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("a_{ij}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.716668em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("a")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[t._v("i")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(" ，代表矩阵的元素")]),t._v(" "),s("p",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("1")]),s("mo",[t._v("≤")]),s("mi",[t._v("n")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mi",[t._v("m")]),s("mo",[t._v("≤")]),s("mn",[t._v("5")]),s("mn",[t._v("0")]),s("mn",[t._v("0")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1\\leq n,m \\leq 500")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8388800000000001em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("1")]),s("span",{staticClass:"mrel"},[t._v("≤")]),s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mord mathit"},[t._v("m")]),s("span",{staticClass:"mrel"},[t._v("≤")]),s("span",{staticClass:"mord mathrm"},[t._v("5")]),s("span",{staticClass:"mord mathrm"},[t._v("0")]),s("span",{staticClass:"mord mathrm"},[t._v("0")])])])])]),t._v(" "),s("p",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("1")]),s("mo",[t._v("≤")]),s("msub",[s("mi",[t._v("a")]),s("mrow",[s("mi",[t._v("i")]),s("mi",[t._v("j")])],1)],1),s("mo",[t._v("≤")]),s("mn",[t._v("1")]),s("msup",[s("mn",[t._v("0")]),s("mn",[t._v("9")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1\\leq a_{ij} \\leq 10^9")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"1.1002159999999999em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("1")]),s("span",{staticClass:"mrel"},[t._v("≤")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("a")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[t._v("i")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mrel"},[t._v("≤")]),s("span",{staticClass:"mord mathrm"},[t._v("1")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("0")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("9")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"输出描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出描述"}},[t._v("#")]),t._v(" 输出描述")]),t._v(" "),s("p",[t._v("一个整数，代表最少需要花费的时间。")]),t._v(" "),s("h2",{attrs:{id:"样例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样例"}},[t._v("#")]),t._v(" 样例"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("1")])])])])]),t._v(" "),s("p",[s("strong",[t._v("输入")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("3 3\n1 3 5\n2 1 4\n2 5 6\n")])])]),s("p",[s("strong",[t._v("输出")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("5\n")])])]),s("p",[s("img",{attrs:{src:"/split.png",alt:"split"}})]),t._v(" "),s("h2",{attrs:{id:"思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),s("h3",{attrs:{id:"解法一-建图技巧-最短路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法一-建图技巧-最短路"}},[t._v("#")]),t._v(" 解法一：建图技巧+最短路")]),t._v(" "),s("p",[s("strong",[t._v("1.如果没有传送机会")])]),t._v(" "),s("p",[t._v("​\t那么就是一个裸的最短路。建立一张网格图，然后跑dijstra即可。")]),t._v(" "),s("p",[s("strong",[t._v("2.有传送机会")])]),t._v(" "),s("p",[t._v("​\t1.提升维度："),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("d")]),s("mi",[t._v("p")]),s("mo",[t._v("[")]),s("mi",[t._v("i")]),s("mo",[t._v("]")]),s("mo",[t._v("[")]),s("mi",[t._v("j")]),s("mo",[t._v("=")]),s("mn",[t._v("0")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mn",[t._v("1")]),s("mo",[t._v("]")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("dp[i][j=0/1]")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("d")]),s("span",{staticClass:"mord mathit"},[t._v("p")]),s("span",{staticClass:"mopen"},[t._v("[")]),s("span",{staticClass:"mord mathit"},[t._v("i")]),s("span",{staticClass:"mclose"},[t._v("]")]),s("span",{staticClass:"mopen"},[t._v("[")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mord mathrm"},[t._v("0")]),s("span",{staticClass:"mord mathrm"},[t._v("/")]),s("span",{staticClass:"mord mathrm"},[t._v("1")]),s("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v(" 代表当前站在点"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("i")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.65952em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("i")])])])]),t._v(" 并且是否使用过传送机会时的 最短路。")]),t._v(" "),s("p",[t._v("​\t2.暴力建图：任意两个相同权值的点之间建立一条"),s("strong",[t._v("虚边")]),t._v("。在跑dijstra的时候注意分两类边讨论：")]),t._v(" "),s("p",[t._v("​\t\t普通的边：第二维状态不变。")]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("虚边")]),t._v(" ： 第二维状态从 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("0")]),s("mo",[t._v("→")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("0 \\rightarrow 1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("0")]),s("span",{staticClass:"mrel"},[t._v("→")]),s("span",{staticClass:"mord mathrm"},[t._v("1")])])])]),t._v(" , 且当且仅当第二维 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("j")]),s("mo",[t._v("=")]),s("mn",[t._v("0")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("j=0")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.65952em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.85396em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mord mathrm"},[t._v("0")])])])]),t._v(" 时才允许经过虚边。")]),t._v(" "),s("p",[s("strong",[t._v("3.建图优化")])]),t._v(" "),s("p",[t._v("​\t上面那种暴力建图方式会使得"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("E")]),s("mo",[t._v("=")]),s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("4")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("E = n^4")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("4")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(".无法通过本题。这里使用超级源点技巧，即：拉若干个"),s("strong",[t._v("虚点")]),t._v("出来，让所有相同权值的点都连一条边到同一个虚点即可。dijstra的时候与上面同理地进行分类讨论。这种方法可以轻松拓展至"),s("strong",[t._v("有"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("k")]),s("mo",[t._v("(")]),s("mi",[t._v("k")]),s("mo",[t._v("=")]),s("mn",[t._v("2")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mn",[t._v("3")]),s("mo",{attrs:{separator:"true"}},[t._v(",")]),s("mn",[t._v("4")]),s("mo",[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("k(k=2,3,4)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mord mathrm"},[t._v("3")]),s("span",{staticClass:"mpunct"},[t._v(",")]),s("span",{staticClass:"mord mathrm"},[t._v("4")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("次传送机会")])]),t._v(" "),s("h3",{attrs:{id:"解法二-巧妙思维-最短路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法二-巧妙思维-最短路"}},[t._v("#")]),t._v(" 解法二：巧妙思维+最短路")]),t._v(" "),s("p",[t._v("由于相同的点之间传送无需花费，且只允许一次，而且又是无向图。所以有一种比较巧妙的做法：正向跑一遍dijstra，反向跑一遍dijstra.")]),t._v(" "),s("p",[t._v("接着相同权值的点(假设权值为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("x")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("x")])])])]),t._v(")的最短路即为 正向到任意一个权值为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("x")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("x")])])])]),t._v("点的最短路的最小值 + 反向到任意一个权值为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("x")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("x")])])])]),t._v("点的最短路的最小值")]),t._v(" "),s("h2",{attrs:{id:"代码-解法1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码-解法1"}},[t._v("#")]),t._v(" 代码(解法1)")]),t._v(" "),s("h3",{attrs:{id:"c-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-代码"}},[t._v("#")]),t._v(" C++代码")]),t._v(" "),s("div",{staticClass:"language-c++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int maxn = 505;\nconst int maxv = maxn * maxn + maxn;\nint a[maxn][maxn];\nint n , m;\nint trans (int x , int y) {\n    return (x - 1) * m + y;\n}\nvector<pair<int,ll>> e[maxv];\nint dx[4] = {-1 , 1 , 0 , 0};\nint dy[4] = {0 , 0 , -1 , 1};\n// dijstra\nll dp[maxv][2];\nint bk[maxv][2];\nstruct Node {\n    int id , vis;\n    ll val;\n    bool operator < (const  Node & a) const{\n        return val > a.val;\n    }\n};\npriority_queue<Node> q;\nvoid dij(){\n    memset(dp , -1 , sizeof dp);\n    dp[1][0] = 0;\n    q.push({1 , 0 , 0});\n    while (q.size()){\n        Node g = q.top();\n        q.pop();\n        int u = g.id , vis = g.vis;\n        if (bk[u][vis]) continue;\n        bk[u][vis] = 1;\n        for (auto t : e[u]){\n            int v = t.first;\n            ll w = t.second;\n            // 分两种边讨论第二维的状态变化\n            // 到虚点的边：0 -> 1\n            if (v > n * m){\n                if (vis) continue;\n                if (dp[v][1] == -1 || dp[v][1] > dp[u][0] + w){\n                    dp[v][1] = dp[u][0] + w;\n                    q.push({v , 1 , dp[v][1]});\n                }\n            }// 经过普通边:0->0 , 1->1\n            else {\n                if (dp[v][vis] == -1 || dp[v][vis] > dp[u][vis] + w){\n                    dp[v][vis] = dp[u][vis] + w;\n                    q.push({v , vis , dp[v][vis]});\n                }\n            }\n        }\n    }\n    return ;\n}\nint main() {\n    cin >> n >> m;\n    for (int i = 1 ; i <= n ; i++){\n        for (int j = 1 ; j <= m ; j++){\n            cin >> a[i][j];\n        }\n    }\n    // 建图\n    // 普通边\n    map<int,vector<int>> mp;\n    for (int i = 1 ; i <= n ; i++){\n        for (int j = 1 ; j <= m ; j++){\n            for (int d = 0 ; d < 4 ; d++){\n                int ni = i + dx[d];\n                int nj = j + dy[d];\n                if (ni < 1 || ni > n || nj < 1 || nj > m) continue;\n                e[trans(i , j)].push_back({trans(ni , nj) , abs(a[i][j] - a[ni][nj])});\n            }\n            mp[a[i][j]].push_back(trans(i , j));\n        }\n    }\n    // 虚点 + 虚边\n    int cnt = n * m + 1;\n    for (auto x : mp){\n        for (auto y : x.second){\n            e[y].push_back({cnt , 0});\n            e[cnt].push_back({y , 0});\n        }\n        cnt++;\n    }\n    dij();\n    ll ans = dp[trans(n , m)][0];\n    if (dp[trans(n , m)][1] != -1) ans = min(ans , dp[trans(n , m)][1]);\n    cout << ans << endl;\n\treturn 0;\n}\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);