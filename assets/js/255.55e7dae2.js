(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{528:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://codefun2000.com/p/P1837",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线评测链接:P1837"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("塔子哥这学期有一门压力巨大的专业课，编译原理，这到底是谁在听懂啊？啊？！还要做恁多实验。有一个实验要求塔子哥将C语言翻译成对应的汇编程序，这就需要对文本进行切词，聪明的塔子哥决定使用正则表达式来完成切词任务。")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("已知存在种字符串解析语法,其中的语法元素如下")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" N：用于江配单个数字(0-9)")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" A：用于四配单个字母(a-z，A-Z)")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" n()：用于表示一个分组，分组中至少有一个N语法元素或者A语法元素，n为个数值,表示匹配n次，1<=n<=200")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v(" 输入给定的解析语法和字符串，要求从中找到第一个满足解析语法的字符串。")]),t._v(" "),a("h1",{attrs:{id:"输入描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入描述"}},[t._v("#")]),t._v(" 输入描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("输入两行数据，第一行是给定的解析语法，第二行是目标字符串。")]),t._v(" "),a("h1",{attrs:{id:"输出描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出描述"}},[t._v("#")]),t._v(" 输出描述")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mspace",{attrs:{width:"2em"}})],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\qquad")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mspace qquad"})])])]),t._v("输出匹配的子字符串内容，如果没有匹配中任何字符串，输出!（英文感叹号）")]),t._v(" "),a("h1",{attrs:{id:"样例一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样例一"}},[t._v("#")]),t._v(" 样例一")]),t._v(" "),a("p",[a("strong",[t._v("输入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2(AN)\nBA3A3ABB\n")])])]),a("p",[a("strong",[t._v("输出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("A3A3\n")])])]),a("h1",{attrs:{id:"样例二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样例二"}},[t._v("#")]),t._v(" 样例二")]),t._v(" "),a("p",[a("strong",[t._v("输入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2(A2(N))\nA3322A33P20BB\n")])])]),a("p",[a("strong",[t._v("输出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("A33P20\n")])])]),a("h1",{attrs:{id:"limitation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitation"}},[t._v("#")]),t._v(" Limitation")]),t._v(" "),a("p",[t._v("1s, 1024KiB for each test case.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/split.png",alt:"split"}})]),t._v(" "),a("h2",{attrs:{id:"题目思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目思路"}},[t._v("#")]),t._v(" 题目思路")]),t._v(" "),a("p",[t._v("本题的模式串可以展开，使用栈来模拟即可，每次一个"),a("code",[t._v("(")]),t._v("放入栈中对应的位置以及前面的数量，每次"),a("code",[t._v(")")]),t._v("弹出栈顶元素，然后将栈顶元素的数量乘以当前的字符串加上栈顶元素的前面的字符串加入到模式串中即可。")]),t._v(" "),a("p",[t._v("需要注意有可能模式串非常长，所以中间需要判断是否已经超过了匹配串的长度，超过则直接返回。")]),t._v(" "),a("p",[t._v("有了模式串和匹配串之后，就可以使用KMP算法来进行匹配了。")]),t._v(" "),a("h2",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),a("p",[a("strong",[t._v("C++")])]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  string t, s;\n  cin >> t >> s;\n  string tmp;\n  stack<int> stk, cnt;\n  for (int i = 0;i < t.size();++ i) {\n    if (isdigit(t[i])) {\n        int sum = 0;\n        while (i < t.size() && isdigit(t[i])) {\n            sum = sum * 10 + t[i] - '0';\n            ++ i;\n        }\n        cnt.push(sum);\n        stk.push(tmp.size());\n\t} else if(t[i] == ')') {\n\t    int j = stk.top(), k = cnt.top() - 1;\n\t    stk.pop();\n\t    cnt.pop();\n\t    string tt = tmp.substr(j, tmp.size() - j);\n\t    if (k * tt.size() + tmp.size() > s.size()) {\n\t        cout << \"!\" << endl;\n\t        return 0;\n\t    }\n\t    while (k --) {\n\t        tmp += tt;\n\t    }\n\t} else {\n\t\ttmp += t[i];\n\t\tif (tmp.size() > s.size()) {\n\t\t\tcout << \"!\" << endl;\n\t        return 0;\n\t\t}\n\t}\n\t}\n\tt = \" \" + tmp;\n\tvector<int> ne(t.size(), 0);\n\tfor (int i = 2, j = 0;i < t.size();++ i) {\n\t    while (j && t[i] != t[j + 1]) j = ne[j];\n\t    if (t[i] == t[j + 1]) ++ j;\n\t    ne[i] = j;\n\t}\n\tauto check = [](char a, char b) -> bool {\n\t    if (b == 'A' && isalpha(a)) return true;\n\t    if (b == 'N' && isdigit(a)) return true;\n\t    return false;\n\t};\n\tfor (int i = 0, j = 0;i < s.size();++ i) {\n\t    while (j && !check(s[i], t[j + 1])) j = ne[j];\n\t    if (check(s[i], t[j + 1])) ++ j;\n\t    if (j == t.size() - 1) {\n\t        cout << s.substr(i - t.size() + 2, t.size() - 1) << endl;\n\t        return 0;\n\t    }\n  }\n  cout << \"!\" << endl;\n  return 0;\n}\n")])])]),a("p",[a("strong",[t._v("会员可通过查看《已通过》的提交记录来查看其他语言哦~")])])])}),[],!1,null,null,null);a.default=n.exports}}]);