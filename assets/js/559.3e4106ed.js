(window.webpackJsonp=window.webpackJsonp||[]).push([[559],{830:function(t,a,s){"use strict";s.r(a);var i=s(14),n=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://codefun2000.com/p/P1887",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线评测链接:P1887"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[t._v("#")]),t._v(" 题目描述")]),t._v(" "),a("p",[t._v("小友正在优化财务报表分析功能。给定一个由不同整数构成的数组revenues，每个元素表示在不同时间段内的收入。我们用以下方式定义一个与revenues长度相同的数组maxDurations:")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")]),a("mi",[t._v("a")]),a("mi",[t._v("x")]),a("mi",[t._v("D")]),a("mi",[t._v("u")]),a("mi",[t._v("r")]),a("mi",[t._v("a")]),a("mi",[t._v("t")]),a("mi",[t._v("i")]),a("mi",[t._v("o")]),a("mi",[t._v("n")]),a("mi",[t._v("s")]),a("mo",[t._v("[")]),a("mi",[t._v("i")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("maxDurations[i]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")]),a("span",{staticClass:"mord mathit"},[t._v("a")]),a("span",{staticClass:"mord mathit"},[t._v("x")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("D")]),a("span",{staticClass:"mord mathit"},[t._v("u")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mord mathit"},[t._v("a")]),a("span",{staticClass:"mord mathit"},[t._v("t")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mord mathit"},[t._v("o")]),a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mord mathit"},[t._v("s")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("是一个子数组 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("r")]),a("mi",[t._v("e")]),a("mi",[t._v("v")]),a("mi",[t._v("e")]),a("mi",[t._v("n")]),a("mi",[t._v("u")]),a("mi",[t._v("e")]),a("mi",[t._v("s")]),a("mo",[t._v("[")]),a("mi",[t._v("l")]),a("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),a("mi",{attrs:{mathvariant:"normal"}},[t._v(".")]),a("mi",[t._v("r")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("revenues[l..r]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("v")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mord mathit"},[t._v("u")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit"},[t._v("s")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),a("span",{staticClass:"mord mathrm"},[t._v(".")]),a("span",{staticClass:"mord mathrm"},[t._v(".")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("的最大长度，该子数组中的最大收入等于"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("r")]),a("mi",[t._v("e")]),a("mi",[t._v("v")]),a("mi",[t._v("e")]),a("mi",[t._v("n")]),a("mi",[t._v("u")]),a("mi",[t._v("e")]),a("mi",[t._v("s")]),a("mo",[t._v("[")]),a("mi",[t._v("i")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("revenues[i]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("v")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mord mathit"},[t._v("u")]),a("span",{staticClass:"mord mathit"},[t._v("e")]),a("span",{staticClass:"mord mathit"},[t._v("s")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("。")]),t._v(" "),a("p",[t._v("返回数组 maxDurations。")]),t._v(" "),a("p",[t._v("注意，子数组是数组的连续部分。")]),t._v(" "),a("h1",{attrs:{id:"输入描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入描述"}},[t._v("#")]),t._v(" 输入描述")]),t._v(" "),a("p",[t._v("第一行输入"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("N")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("N")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v("，表示数组的长度")]),t._v(" "),a("p",[t._v("输入长度为"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("N")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("N")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v("的数组的各个元素")]),t._v(" "),a("h1",{attrs:{id:"输出描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出描述"}},[t._v("#")]),t._v(" 输出描述")]),t._v(" "),a("p",[t._v("maxDurations")]),t._v(" "),a("h1",{attrs:{id:"样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样例"}},[t._v("#")]),t._v(" 样例")]),t._v(" "),a("p",[a("strong",[t._v("输入")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("6\n1 3 2 4 3 5\n")])])]),a("p",[a("strong",[t._v("输出")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1 3 1 5 1 6\n")])])]),a("p",[a("strong",[t._v("说明")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("对于 revenues[0]，最长的子数组，其中最大值为 1，是 nums[0..0]，所以 maxDurations[0]=1。\n对于 revenues[1]，最长的子数组，是 revenues[0..2]，其中最大值为 3，所以 maxDurations[1]= 3。\n对于 revenues[2]，最长的子数组，是 revenues[2..2]，其中最大值为 2，所以 maxDurations[2]=1.\n对于 revenues[3]，最长的子数组，是revenues[0..4]，其中最大值为4，所以maxDurations[3]=5\n对于 revenues[4]，最长的子数组，是 nums[4..4]，其中最大值为 3，所以 maxDurations[4]=1\n对于 revenues[5]，最长的子数组，是 nums[0..5]，其中最大值为5，所以 maxDurations[5]=6。\n")])])]),a("p",[a("img",{attrs:{src:"/split.png",alt:"split"}})]),t._v(" "),a("h2",{attrs:{id:"思路-单调栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路-单调栈"}},[t._v("#")]),t._v(" 思路：单调栈")]),t._v(" "),a("p",[t._v("对于一个值"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("x")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("x")])])])]),t._v("，我们需要找到其两边比"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("x")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("x")])])])]),t._v("大的第一个值。")]),t._v(" "),a("p",[t._v("使用单调递减栈可以实现该目标。栈中每个元素的左边是比该元素大的第一个值。而当一个元素出栈时，那么其右边第一个比其大的值也就找到了。")]),t._v(" "),a("p",[t._v("时间复杂度为"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("O")]),a("mo",[t._v("(")]),a("mi",[t._v("N")]),a("mo",[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(N)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),a("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),a("h2",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),a("h3",{attrs:{id:"c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C++")]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\nconst int maxn = 1e5 + 10; // 定义一个常量maxn，表示数组的最大长度\nint s[maxn], top, n; // s[]用于存储下标，top为栈顶指针，n为数组长度\nint a[maxn], res[maxn]; // a[]存储输入的数组，res[]存储结果\n\nint main() {\n    std::ios::sync_with_stdio(false); // 关闭同步，提高C++输入输出效率\n    cin >> n; // 输入数组长度\n    for (int i = 1; i <= n; ++i) {\n        cin >> a[i]; // 输入数组元素\n        // 当栈非空且当前元素a[i]大于栈顶元素a[s[top]]时\n        while (top && a[i] > a[s[top]]) {\n            int l = top - 1; // l指向当前栈顶元素的前一个元素\n            // 找到与当前栈顶元素不同的最近元素\n            while (l && a[s[l]] == a[s[top]]) {\n                l--;\n            }\n            // 计算并存储结果\n            res[s[top]] = i - s[l] - 1;\n            top--; // 弹出栈顶元素\n        }\n        s[++top] = i; // 将当前元素下标压入栈中\n    }\n    // 处理栈中剩余的元素\n    while (top) {\n        res[s[top]] = n - s[top - 1]; // 计算并存储结果\n        top--; // 弹出栈顶元素\n    }\n    // 输出结果数组\n    for (int i = 1; i <= n; ++i) {\n        cout << res[i] << " ";\n    }\n    \n    return 0;\n}\n')])])])])}),[],!1,null,null,null);a.default=n.exports}}]);